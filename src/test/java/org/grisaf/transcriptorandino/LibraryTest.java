/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.grisaf.transcriptorandino;

import org.junit.Test;
import static org.junit.Assert.*;

import java.util.List;

public class LibraryTest {

    String texto = "¡Hola! ¿Cómo estás? ¿Cómo vas? ¿Todo \"bien\"? Últimamente no sé, porque andas corriendo y callado; siempre con cero trazo y mucha hambre, saltando como canguro en el banco.";

    // @Test
    public void testSomeLibraryMethod() {
        Library classUnderTest = new Library();
        assertTrue("someLibraryMethod should return 'true'", classUnderTest.someLibraryMethod());
    }

    @Test
    public void testTranscripcion() {
        System.out.println("Test Transcripcion");
        Library libreria = new Library();
        Transcriptor transcriptor = libreria.getInstance();
        List<String> mensajes = transcriptor.transcripciones(texto);
        int i = 0;
        for (String mensaje: mensajes) {
            System.out.println(i + ": " + mensaje);
            i++;
        }
    }

    // @Test
    public void testPasos() {
        System.out.println("Test Pasos");
        Library libreria = new Library();
        Transcriptor transcriptor = libreria.getInstance();
        List<String> mensajes = transcriptor.paso1Separar(texto);
        mensajes = transcriptor.paso2EliminarCaracteres(mensajes);
        mensajes = transcriptor.paso3Minusculas(mensajes);
        mensajes = transcriptor.paso4EliminarHSinC(mensajes);
        List<Texto> textos = transcriptor.paso5_1StringATexto(mensajes);
        textos = transcriptor.paso5Z(textos);
        textos = transcriptor.paso6GrafiasDobles(textos);
        textos = transcriptor.paso7GueGui(textos);
        textos = transcriptor.paso8Africadas(textos);
        textos = transcriptor.paso9C(textos);
        textos = transcriptor.paso10V(textos);
        textos = transcriptor.paso11JGeGi(textos);
        textos = transcriptor.paso12Y(textos);
        textos = transcriptor.paso13Nn(textos);
        textos = transcriptor.paso14IdentificarLetras(textos);
        textos = transcriptor.paso15IdentificarConsonantes(textos);
        textos = transcriptor.paso16B(textos);
        textos = transcriptor.paso17D(textos);
        textos = transcriptor.paso18G(textos);
        textos = transcriptor.paso19Nasales(textos);
        textos = transcriptor.paso20EliminarTildes(textos);
        textos = transcriptor.paso21NasalizarVocales(textos);
        int i = 0;
        for (Texto texto: textos) {
            System.out.println(i + ":");
            System.out.println("  Original: " + texto.getOriginal());
            System.out.println("Transcrito: " + texto.getTranscrito());
            System.out.println(" LetraTipo: " + texto.getLetraTiposString());
            System.out.println("  ConsModo: " + texto.getConsonanteModosString());
            System.out.println(" ConsPunto: " + texto.getConsonantePuntosString());
            System.out.println(" Procesado: " + texto.getProcesadoString());
            i++;
        }
    }

}
